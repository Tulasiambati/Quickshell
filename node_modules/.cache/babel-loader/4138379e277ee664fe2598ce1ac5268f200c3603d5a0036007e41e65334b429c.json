{"ast":null,"code":"import axios from \"axios\";\nimport Card from \"../components/Card/Card\";\n\n// Define action types as constants\nconst DATA_REQUEST = \"DATA_REQUEST\";\nconst DATA_SUCCESS = \"DATA_SUCCESS\";\nconst DATA_FAILURE = \"DATA_FAILURE\";\nconst SELECT_DATA_REQUEST = \"SELECT_DATA_REQUEST\";\nconst SELECT_DATA_SUCCESS = \"SELECT_DATA_SUCCESS\";\nconst SELECT_DATA_FAILURE = \"SELECT_DATA_FAILURE\";\nexport const fetchAllData = () => async dispatch => {\n  try {\n    dispatch({\n      type: DATA_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\n    dispatch({\n      type: DATA_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: DATA_FAILURE\n    });\n  }\n};\nexport const selectData = (group, allTickets, orderValue) => async dispatch => {\n  try {\n    dispatch({\n      type: SELECT_DATA_REQUEST\n    });\n    let user = false;\n    let mySet = new Set();\n    let arr = [],\n      selectedData = [];\n    if (group === \"status\") {\n      allTickets.forEach(element => {\n        mySet.add(element.status);\n      });\n      arr = [...mySet];\n      arr.forEach((element, index) => {\n        let arr = allTickets.filter(fElement => {\n          return element === fElement.status;\n        });\n        selectedData.push({\n          [index]: {\n            title: element,\n            value: arr\n          }\n        });\n      });\n    } else if (group === \"user\") {\n      var _allTickets$allUser;\n      user = true;\n      allTickets === null || allTickets === void 0 ? void 0 : (_allTickets$allUser = allTickets.allUser) === null || _allTickets$allUser === void 0 ? void 0 : _allTickets$allUser.forEach((element, index) => {\n        var _allTickets$allTicket;\n        arr = allTickets === null || allTickets === void 0 ? void 0 : (_allTickets$allTicket = allTickets.allTickets) === null || _allTickets$allTicket === void 0 ? void 0 : _allTickets$allTicket.filter(Felement => {\n          return element.id === Felement.userId;\n        });\n        selectedData.push({\n          [index]: {\n            title: element.name,\n            value: arr\n          }\n        });\n      });\n    } else {\n      let prior_list = [\"No priority\", \"Low\", \"Medium\", \"High\", \"Urgent\"];\n      prior_list.forEach((element, index) => {\n        arr = allTickets.filter(fElement => {\n          return index === fElement.priority;\n        });\n        selectedData.push({\n          [index]: {\n            title: element,\n            value: arr\n          }\n        });\n      });\n    }\n    if (orderValue === \"title\") {\n      selectedData.forEach((element, index) => {\n        var _element$index, _element$index$value;\n        (_element$index = element[index]) === null || _element$index === void 0 ? void 0 : (_element$index$value = _element$index.value) === null || _element$index$value === void 0 ? void 0 : _element$index$value.sort((a, b) => a.title.localeCompare(b.title));\n      });\n    }\n    if (orderValue === \"priority\") {\n      selectedData.forEach((element, index) => {\n        var _element$index2, _element$index2$value;\n        (_element$index2 = element[index]) === null || _element$index2 === void 0 ? void 0 : (_element$index2$value = _element$index2.value) === null || _element$index2$value === void 0 ? void 0 : _element$index2$value.sort((a, b) => b.priority - a.priority);\n      });\n    }\n    dispatch({\n      type: SELECT_DATA_SUCCESS,\n      payload: {\n        selectedData,\n        user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: SELECT_DATA_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","Card","DATA_REQUEST","DATA_SUCCESS","DATA_FAILURE","SELECT_DATA_REQUEST","SELECT_DATA_SUCCESS","SELECT_DATA_FAILURE","fetchAllData","dispatch","type","data","get","payload","error","selectData","group","allTickets","orderValue","user","mySet","Set","arr","selectedData","forEach","element","add","status","index","filter","fElement","push","title","value","_allTickets$allUser","allUser","_allTickets$allTicket","Felement","id","userId","name","prior_list","priority","_element$index","_element$index$value","sort","a","b","localeCompare","_element$index2","_element$index2$value","message"],"sources":["C:/Users/AMBATI BALA TULASI/Desktop/Frontend-assignment/src/Actions/DataAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport Card from \"../components/Card/Card\";\r\n\r\n// Define action types as constants\r\nconst DATA_REQUEST = \"DATA_REQUEST\";\r\nconst DATA_SUCCESS = \"DATA_SUCCESS\";\r\nconst DATA_FAILURE = \"DATA_FAILURE\";\r\nconst SELECT_DATA_REQUEST = \"SELECT_DATA_REQUEST\";\r\nconst SELECT_DATA_SUCCESS = \"SELECT_DATA_SUCCESS\";\r\nconst SELECT_DATA_FAILURE = \"SELECT_DATA_FAILURE\";\r\nexport const fetchAllData = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DATA_REQUEST });\r\n    const { data } = await axios.get(\r\n      \"https://api.quicksell.co/v1/internal/frontend-assignment\"\r\n    );\r\n    dispatch({ type: DATA_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: DATA_FAILURE });\r\n  }\r\n};\r\nexport const selectData =\r\n  (group, allTickets, orderValue) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: SELECT_DATA_REQUEST });\r\n      let user = false;\r\n      let mySet = new Set();\r\n      let arr = [],\r\n        selectedData = [];\r\n      if (group === \"status\") {\r\n        allTickets.forEach((element) => {\r\n          mySet.add(element.status);\r\n        });\r\n        arr = [...mySet];\r\n        arr.forEach((element, index) => {\r\n          let arr = allTickets.filter((fElement) => {\r\n            return element === fElement.status;\r\n          });\r\n          selectedData.push({\r\n            [index]: {\r\n              title: element,\r\n              value: arr,\r\n            },\r\n          });\r\n        });\r\n      } else if (group === \"user\") {\r\n        user = true;\r\n        allTickets?.allUser?.forEach((element, index) => {\r\n          arr = allTickets?.allTickets?.filter((Felement) => {\r\n            return element.id === Felement.userId;\r\n          });\r\n          selectedData.push({\r\n            [index]: {\r\n              title: element.name,\r\n              value: arr,\r\n            },\r\n          });\r\n        });\r\n      } else {\r\n        let prior_list = [\"No priority\", \"Low\", \"Medium\", \"High\", \"Urgent\"];\r\n        prior_list.forEach((element, index) => {\r\n          arr = allTickets.filter((fElement) => {\r\n            return index === fElement.priority;\r\n          });\r\n\r\n          selectedData.push({\r\n            [index]: {\r\n              title: element,\r\n              value: arr,\r\n            },\r\n          });\r\n        });\r\n      }\r\n      if (orderValue === \"title\") {\r\n        selectedData.forEach((element, index) => {\r\n          element[index]?.value?.sort((a, b) => a.title.localeCompare(b.title));\r\n        });\r\n      }\r\n      if (orderValue === \"priority\") {\r\n        selectedData.forEach((element, index) => {\r\n          element[index]?.value?.sort((a, b) => b.priority - a.priority);\r\n        });\r\n      }\r\n      dispatch({ type: SELECT_DATA_SUCCESS, payload: { selectedData, user } });\r\n    } catch (error) {\r\n      dispatch({ type: SELECT_DATA_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}